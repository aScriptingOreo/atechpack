# This is a basic workflow to help you get started with Actions

name: Package_Modpack
on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:

  package_release:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: V.0.${{ github.run_number }}
          release_name: Pack_Release v.0.${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Modpack Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./aTechPack.zip
          asset_name: aTechPack.zip
          asset_content_type: application/zip

      - name: Build Server
        uses: henkelmax/build-modpack-server-action@v1.0.0
        with:
          modpack-path: ./aTechPack.zip
          output-path: ./aTechPack-server.zip

      - name: Upload Server Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./aTechPack-server.zip
          asset_name: 'aTechPack-Server.zip'
          asset_content_type: application/zip

      - name: Copy files for CurseForge upload
        run: |
          mkdir -p curse_upload
          cp ./aTechPack.zip './curse_upload/aTechPack-0${{ github.run_number }}.zip'
          cp ./aTechPack-server.zip './curse_upload/aTechPack-Server-0${{ github.run_number }}.zip'

      - name: Upload to CurseForge
        uses: henkelmax/upload-curseforge-modpack-action@v1.0.0
        with:
          api-token: ${{ secrets.API_TOKEN }}
          project-id: '442747'
          modpack-path: './curse_upload/aTechPack-0${{ github.run_number }}.zip'
          modpack-server-path: './curse_upload/aTechPack-Server-0${{ github.run_number }}.zip'
          #changelog: ${{ steps.read_changelog.outputs.content }}
          #changelog-format: 'markdown'
          game-version: '1.12.2'
          display-name: 'aTechPack. v.0.${{ github.run_number }}'
          server-display-name: 'aTechPack. Server v.0.${{ github.run_number }}'
          release-type: 'release'

